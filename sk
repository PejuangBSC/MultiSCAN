<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SOLANA TOKEN CHECKER</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/uikit/3.7.0/css/uikit.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/uikit/3.7.0/js/uikit.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

   

    <link rel="icon" href="https://www.liblogo.com/img-logo/ku2767kd39-kucoin-token-logo-kucoin-review-2022-about-kucoin-crypto-itunes.png" type="image/x-icon">

</head>
<style>
       #scanprogress {
          font-size: 16px;
          color: #0b0808;
        }
        #scanbar {
          text-align: center;
          width:100%;
          height:21px;
          border:1px solid #000;
          margin:5px 0px;
        }
        #bar {
          width:100%;
          background-color:#0ee375;
          height:100%;
        }
        a{
            color:black;
        }
        a:hover{
            color:purple;
        }

       .orange {
        color:  black;
        background-color:rgb(244, 208, 131);
      }

      .ijo {
        color: black;
        background-color:rgb(213, 246, 213);
      }

      .merah{
        color:  black;
        background-color:#f2d3d3;
      }
      .error{
        color: white;
        background-color:#eb1f1f;
      }

      .uk-table th{
            font-weight: bold;
            font-size: large;
            text-align: center;
            color: black;
        }
        /* Menambahkan gaya khusus jika diperlukan */
        .custom-thead {
            position: sticky;
            top: 0;
            background-color: #63f16f; /* Set the desired background color */
            z-index: 1;
        }

        .custom-thead2 {
            position: sticky;
            top: 5%;
            z-index: 1;
        }

        .uk-container {
            width: 96%;
            max-width: none;
        }
        .table-body td {
            font-size: 12px; /* Adjust the font size as needed */
        }
    </style>
<body>
    <hr/>
    <h2 id="hasil" style="color:red; margin:0px 0px; text-align: center;"><span id="open-modal2">SOLANA</span> <span id="open-modal">CHECKER</span> PRICE v3.3</h2> 

    <!-- Modal UIKIT -->
    <div id="my-modal" class="uk-modal-full" uk-modal>
        <div class="uk-modal-dialog">
            <button class="uk-modal-close-full uk-close-large" type="button" uk-close></button>
            <div class="uk-modal-header">
                <h2 class="uk-modal-title">:: SETTING DEX CHECKER</h2>
               
            </div>
            <div class="uk-modal-body">
                <form>
                    <label for="modal-kiri">Modal Kiri:</label>
                    <input type="text" id="modal-kiri" class="uk-input" value="200">

                    <label for="modal-kanan">Modal Kanan:</label>
                    <input type="text" id="modal-kanan" class="uk-input" value="150">

                    <label for="jeda-time">Jeda Time:</label>
                    <input type="text" id="jeda-time" value="850" class="uk-input">
                    
                    <label for="pnl">PNL:</label>
                    <input type="text" id="pnl" value="1.5" class="uk-input">

                    <label for="pnl">NICK NAME:</label>
                    <input type="text" id="user"  class="uk-input" required>
                    <br/>
                    <span>
                        <label for="sc-address">SC Address:</label>
                        <input type="text" id="sc-addresspair" value="Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB" class="uk-input">
    
                        <label for="des-pair">Des Pair:</label>
                        <input type="text" id="des-pair" value="6" class="uk-input">
    
                        <label for="symbo-pair">Symbo Pair:</label>
                        <input type="text" id="symbo-pair" value="USDT" class="uk-input">
                    </span>
                    <br/> <li>SOL : So11111111111111111111111111111111111111112 # 9</li>
                    <li>USDC : EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v # 6</li>
                    <li>USDT : Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB # 6</li>
                     <br/>
                    <button type="button" id="save-button" class="uk-button uk-button-primary">SAVE</button>
                </form>
            </div>
        </div>
    </div>

        <!-- Modal UIKIT -->
        <div id="my-modal2" class="uk-modal-full" uk-modal>
            <div class="uk-modal-dialog">
                <button class="uk-modal-close-full uk-close-large" type="button" uk-close></button>
                <div class="uk-modal-header">
                    <h2 class="uk-modal-title">:: SETTING MODAL</h2>
                   
                </div>
                <div class="uk-modal-body">
                    <form>                      
                        <label for="modal-kiri">API GATE:</label>
                        <input type="text" id="apiGate" class="uk-input" value="">
    
                        <label for="modal-kanan">SECRET GATE:</label>
                        <input type="text" id="secretGate" class="uk-input" value="">
    
                        <label for="modal-kiri">WALLET SOL:</label>
                        <input type="text" id="walletSOL" class="uk-input" value="">
    
                        <label for="modal-kanan">MODAL AWAL - USDT:</label>
                        <input type="number" id="modalAwal" class="uk-input" value="">

                        <label for="modal-kanan">MODAL AWAL - SOLANA:</label>
                        <input type="number" id="modalSol" class="uk-input" value="">
                      <br/> <br/>
                        <button type="button" id="saveModal" class="uk-button uk-button-primary">SAVE</button>
                    </form>
                </div>
            </div>
        </div>
<!-- Button untuk memulai SCAN -->

<div class="uk-container uk-margin-top">
    <form>
      <div class="uk-margin">
        <div class="uk-grid-small uk-child-width-1-6" uk-grid>
            <div>
                <label class="uk-form-label" > AWAL : </label>
                <span class="uk-label uk-label-primary" id="LmodalAwal">?</span>$ | 
                <span class="uk-label uk-label-warning" id="LmodalSol">?</span>SOL
            </div>
            <div>
                <label class="uk-form-label" >KUCOIN : </label>
                <label class="uk-label uk-label-warning" id="LCEXUSDT" >?</label>
            </div>
            <div>
                <label class="uk-form-label" >PHANTOM : </label>
                <label class="uk-label uk-label-warning" id="LDEXUSDT" >?</label>
            </div>
            <div>
                <label class="uk-form-label" >TOTAL : </label>
                <span class="uk-label uk-label-success" id="LtotalUSDT">?</span>
              </div>

              <div>
                <div class="uk-button-group">
                  <!-- <button class="uk-button uk-button-danger" style="display: none;" id="resetmodal">RESET</button>
                  <button class="uk-button uk-button-secondary" id="calculateButton" >CEK ASET</button> -->
               
                <button class="uk-button-small uk-button-danger" type="button" style="display: none;" id="resetmodal" >RESET</button>
                <button class="uk-button-small uk-button-secondary" type="button" id="calculateButton" >CEK ASET</button>
              </div>
            </div>
              <div> 
                <div style="display: none;">
                    <label class="uk-form-label" >BEFORE: </label>
                    <span class="uk-label uk-label-primary" id="LpnlBefore">?</span>
                </div>
                <div>
                    <label class="uk-form-label" >PNL: </label>
                    <label class="uk-label uk-label-primary" id="Lpnl" for="">xxx</label>
                </div>                 
              </div>
              
          </div>
          <hr/>
        <div class="uk-grid-small uk-child-width-1-6" uk-grid>
          <div>
            <label class="uk-label uk-label-danger" for="mkiri">MODAL KIRI</label>
            <div class="uk-margin uk-form-controls">
              <input class="uk-input" type="number" id="mkiri" name="input1" >
            </div>
          </div>
          <div>
            <label class="uk-label uk-label-danger" for="mkanan">MODAL KANAN</label>
            <div class="uk-margin uk-form-controls">
              <input class="uk-input" type="number" id="mkanan" name="input1" >
            </div>
          </div>
          <div>
            <label class="uk-label uk-label-warning" for="mkanan">JEDA</label>
            <div class="uk-margin uk-form-controls">
              <input class="uk-input" type="number" id="mjeda" name="input1"   >
            </div>
          </div>
          <div>
            <label class="uk-label uk-label-primary" for="mkanan">PNL</label>
            <div class="uk-margin uk-form-controls">
              <input class="uk-input" type="number" step="0.01" id="mpnl" name="input1" >
            </div>
          </div>
          <div>
            <label class="uk-label uk-label-warning" >  </label> 
            <div class="uk-margin uk-form-controls"> 
              <button class="uk-button uk-button-danger" id="refresh">STOP</button>
              <label><input class="uk-checkbox" checked type="checkbox" id="GATE" style="display: none;">  </label>
              <label><input class="uk-checkbox" checked type="checkbox" id="KUCOIN" style="display: none;">  </label>

            </div>
          </div>
          <div>
            NICKNAME : <label class="uk-label uk-label-success" id="nickname">????</label>
            <div class="uk-margin uk-form-controls">
              &nbsp;<input type="checkbox" class="uk-checkbox"  id="Cautorun" /> <span class="uk-form-label uk-text-danger uk-text-small" id="autorun"> AUTORUN</span>
              <button class="uk-button uk-button-secondary uk-margin-left uk-flex-last" type="button" id="startSCAN">START</button>
            </div>
          </div>
        </div>

      </div>
  
      <div class="uk-margin ">
        <div class="uk-margin uk-flex-right uk-form-controls" >
          <!-- <div id="scanprogress">Wait</div> 
          <div id="scanbar">
              <div id="bar" style="text-align: center;"> </div>
          </div> -->
             <!-- <label><input class="uk-checkbox" checked type="checkbox" id="GATE"> GATE </label>
            <label><input class="uk-checkbox" type="checkbox"  id="MEXC"> MEXC</label>  -->
             <!-- <button class="uk-button uk-button-danger" id="refresh">REFRESH</button>

          <button class="uk-button uk-button-primary uk-margin-left uk-flex-last" type="button" id="startSCAN">START SCAN</button> -->
        </div>
        
      </div>
  
    </form>
  </div>

   <!-- TABEL HASIL SCANNER -->
    <div class="uk-container uk-flex uk-flex-center uk-flex-middle">
        <table class="uk-table  uk-table-striped uk-sticky">
            <thead class="custom-thead uk-overflow-auto">
                <tr>
                    <th>No</th>           
                    <th>Vol BUY </th>
                    <th> BUY (<span id="Lmodalkiri"></span>$)</th>
                    <th> SELL</th>
                    <th> TOKEN </th>
                    <th> BUY (<span id="Lmodalkanan"></span>$)</th>
                    <th> SELL</th>
                    <th> VOL SELL</th>
                </tr>
            </thead>

             <tr id="Gate" class="custom-thead2">
                <th colspan="8" style="background-color: #ef5a81; color: white;">
                  KUCOIN # PRICE RATE <label class="uk-label uk-label-warning" id="LRate" >  </label> ~ <label class="uk-label uk-label-success" id="LPriceRate" >  </label>
                   { SINYAL KIRI : <span class="uk-badge" id="lKiriGATESinyal"></span> | SINYAL KANAN : <span class="uk-badge" id="lKananGATESinyal"></span> }
                </th>         
            </tr> 

            <tbody id="TabelKucoin" style="text-align: center;"></tbody>

 
        </table>
    </div>    
    <script
    src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"
    integrity="sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"> </script>
<script>
$(document).ready(function () {

  var serverUrls = [
        "https://1.iiknrbtxoz.workers.dev/?",
        "https://2.5iz3h20guj.workers.dev/?",
        "https://3.g5l3krmasa-bda.workers.dev/?",
        "https://4.7gggrv7tyo.workers.dev/?",
        "https://5.1mynz671ti.workers.dev/?",
        "https://6.6dn6rtqjng.workers.dev/?",
        "https://7.zk3dvkv4pp.workers.dev/?",
        "https://8.c58qvb11ew.workers.dev/?",
        "https://9.n9zkqpbdpb.workers.dev/?",
        "https://10.tximoyq5se.workers.dev/?",
        "https://server1.ciwayeh967.workers.dev/?",
        "https://yazid3.yazidcrypto7.workers.dev/?",
        "https://yazid5.bustomi.workers.dev/?",
        "https://yazid4.yazidcrypto3.workers.dev/?",
        "https://yoeazd2.yoeaz2324.workers.dev/?",
        "https://server6.hejij49077.workers.dev/?",
        "https://server7.gejac16482.workers.dev/?",
        "https://server8.xotolo5853.workers.dev/?",
        "https://server9.dopacer193.workers.dev/?",
        "https://server10.samoker104.workers.dev/?",

        "https://worker-floral-river-e85c.tenimik318.workers.dev/?",
        "https://worker-royal-sound-0576.koban78574.workers.dev/?",
        "https://worker-curly-credit-2c73.viyeva7164.workers.dev/?",
        "https://worker-royal-haze-a135.lisolo3133.workers.dev/?",
        "https://worker-shy-cloud-27ca.vanogo6423.workers.dev/?",
        "https://worker-withered-sky-ed3e.vifeci7919.workers.dev/?",
        "https://worker-sweet-sound-e261.jaxet60213.workers.dev/?",
        "https://worker-shiny-sun-08f7.xabenic669.workers.dev/?",
        "https://worker-frosty-darkness-4f91.lobowev486.workers.dev/?",
        "https://worker-silent-boat-3c2e.celov42704.workers.dev/?",
        "https://server11.jiser33752.workers.dev/?",
        "https://server12.yitijex843.workers.dev/?",
        "https://server13.lovah68689.workers.dev/?",
        "https://server14.setopit195.workers.dev/?",
        "https://server15.povaf41444.workers.dev/?",
        "https://server16.niromaf426.workers.dev/?",
        "https://server17.kasoda9624.workers.dev/?",
        "https://server18.befim19137.workers.dev/?",
        "https://server19.gafigaf751.workers.dev/?",
        "https://server20.gayomep515.workers.dev/?",

        "https://server21.becibov328.workers.dev/?",
        "https://server22.togid93865.workers.dev/?",
        "https://server24.yaleve6056.workers.dev/?",
        "https://server23.bagotof270.workers.dev/?",
        "https://new1.gisot33558.workers.dev/?",
        "https://new2.sober27867.workers.dev/?",
        "https://new3.micipiy438.workers.dev/?",
        "https://new3.rayepar467.workers.dev/?",
        "https://new4.xebidi4752.workers.dev/?",
        "https://new5.cibiyec145.workers.dev/?",
        "https://new5.nafeyis928.workers.dev/?",
        "https://worker-broad-tree-49bb.cekah58754.workers.dev/?",
        "https://worker-ancient-hill-fad1.xejab72348.workers.dev/?",
        "https://cors.gemul-putra.workers.dev/?",
        "https://worker-damp-glitter-db50.gameco3780.workers.dev/?",
        "https://worker-blue-hall-1d14.xinevo2786.workers.dev/?",
        "https://worker-tiny-dust-22f2.capaji8287.workers.dev/?",
        "https://worker-old-disk-8a9a.kehaxa7686.workers.dev/?",
        "https://worker-yellow-wood-677d.lanafi2429.workers.dev/?",
        "https://worker-cool-tree-07c7.kifira7062.workers.dev/?",

        "https://hello-world-broken-hill-2492.yoeazd.workers.dev/?",
        "https://proxykiri.awokawok.workers.dev/?",
        "https://proxykanan.awokawok.workers.dev/?",
        "https://myserver1.nehavef167.workers.dev/?",
        "https://server2.holabaj699.workers.dev/?",
        "https://myserver3.ceteg74201.workers.dev/?",
        "https://myserver4.lamowa2709.workers.dev/?",
        "https://myserver5.mohafe9330.workers.dev/?",
        "https://myserver6.bafayi9378.workers.dev/?",
        "https://myserver7.yiwaj21571.workers.dev/?",
        "https://worker-winter-sound-52bd.pedig30998.workers.dev/?",
        "https://worker-super-lake-198e.kevaraj359.workers.dev/?",
        "https://worker-soft-dawn-b769.robiho8355.workers.dev/?",
        "https://worker-weathered-forest-2a2e.fiwala7986.workers.dev/?",
        "https://worker-still-tooth-553b.sewis68418.workers.dev/?",
        "https://worker-solitary-waterfall-f039.fomev71287.workers.dev/?",
        "https://server4.dajom23364.workers.dev/?",
        "https://server3.hopevap663.workers.dev/?",
        "https://worker-blue-mountain-bee9.hibes27870.workers.dev/?",
        "https://worker-still-morning-642c.kehoc99044.workers.dev/?",


        "https://worker-young-bush-ce2e.micejiy771.workers.dev/?",
        "https://worker-sparkling-silence-9d41.federi4672.workers.dev/?",
        "https://worker-polished-cloud-77bd.renel72768.workers.dev/?",
        "https://worker-sweet-darkness-d1c0.risiv74771.workers.dev/?",
        "https://worker-jolly-wildflower-c305.kacito9688.workers.dev/?",
        "https://worker-dawn-king-f162.kekam96808.workers.dev/?",
        "https://worker-shrill-bonus-9ca6.wipihoh336.workers.dev/?",
        "https://worker-tiny-bar-013f.gicot48223.workers.dev/?",
        "https://worker-tight-violet-dbda.xemojos811.workers.dev/?",
        "https://worker-tight-lab-9cc4.fetec22957.workers.dev/?",
        "https://worker-round-star-6bf9.yalayo9082.workers.dev/?",
        "https://worker-cool-dream-e973.gocon75635.workers.dev/?",
        "https://worker-bold-meadow-ab0a.xaraho1024.workers.dev/?",
        "https://worker-cool-truth-c06e.nomege1872.workers.dev/?",
        "https://worker-frosty-star-71a8.cesaxem416.workers.dev/?",
        "https://worker-sweet-dust-96ef.payat56154.workers.dev/?",
        "https://worker-plain-shape-e4c4.dilexid433.workers.dev/?",
        "https://worker-weathered-bar-d4fa.dadiyo8115.workers.dev/?",

    ];

        // Randomly select a server URL
    var randomServerUrl = serverUrls[Math.floor(Math.random() * serverUrls.length)];
      // Initial visibility settings
      updateVisibility();

      // Checkbox change event
      $('.uk-checkbox').change(function () {
          updateVisibility();
         // alert("xxxx");
      });

      function updateVisibility() {
          // GATE checkbox
          if ($('#GATE').prop('checked')) {
              $('tr#Gate').show();
              $('TabelKucoin').show();
          } else {
              $('tr#Gate').hide();
              $('TabelKucoin').hide();
          }

      }
    //SETTING GLOBAL
        var modalKiri = localStorage.getItem("SKX_modalKiri");
        var modalKanan = localStorage.getItem("SKX_modalKanan");
        var jedaTime = localStorage.getItem("SKX_jedaTime");
        var scAddressPair = localStorage.getItem("SKX_scAddressPair");
        var desPair = localStorage.getItem("SKX_desPair");
        var symboPair = localStorage.getItem("SKX_symboPair");
        var pnl = localStorage.getItem("SKX_pnl");
        var user = localStorage.getItem("SKX_user");

        var apiGate = localStorage.getItem("SKX_apiGate");
        var secretGate = localStorage.getItem("SKX_secretGate");
        var walletSOL = localStorage.getItem("SKX_walletSOL");
        var modalAwal = localStorage.getItem("SKX_modalAwal");
        var modalSol = localStorage.getItem("SKX_modalSol");

        $('#apiGate').val(apiGate || '');
        $('#secretGate').val(secretGate || '');
        $('#walletSOL').val(walletSOL || '');
        $('#user').val(user || '');
        $('#modalAwal').val(modalAwal || '');
        $('#LmodalSol').text(modalSol || '');
        $('#nickname').text(user || '');

        $('#Lmodalkiri').text(modalKiri || '');
        $('#Lmodalkanan').text(modalKanan || '');

        $("#mkiri, #mkanan, #mjeda, #mpnl").on("change", function () {
          localStorage.setItem("SKX_modalKiri", $("#mkiri").val());
          localStorage.setItem("SKX_modalKanan", $("#mkanan").val());
          localStorage.setItem("SKX_jedaTime", $("#mjeda").val());
          localStorage.setItem("SKX_pnl", $("#mpnl").val());
          location.reload();
        });

        if(!user){
          toastr.error('NICKNAME HARUS DI ISI !!');
          $("#startSCAN").hide();          

          $('#nickname').text('ISI DULU');
        }

       
       // cekBalanceGATE()
        updateForm()
       // calculatePnl()
        $("#calculateButton").on("click",function(){
            cekBalanceGATE();
            $("#resetmodal").show();
        });

        // Ketika tombol diklik
        $("#resetmodal").on("click", function() {
            // Simpan nilai dari elemen span ke dalam localStorage
            localStorage.setItem("SKX_modalAwal",$("#LtotalUSDT").text().trim());
            // Tambahan kode lainnya sesuai kebutuhan
            toastr.success('RESET BERHASIL!!');
            cekBalanceGATE();
           // $("#resetmodal").prop('disabled', true);
            location.reload();
        });


     // Menampilkan modal settingan
     $("#open-modal").on("click", function() {
        UIkit.modal("#my-modal").show();
     });

     $("#open-modal2").on("click", function() {
        UIkit.modal("#my-modal2").show();
     });

     function setBeforeStart(){
          localStorage.setItem('SKX_KiriGATESinyal',0);
          localStorage.setItem('SKX_KananGATESinyal',0);

          $("#lKiriGATESinyal").text("");
          $("#lKananGATESinyal").text("");

          localStorage.setItem('SKX_KiriMEXCSinyal',0);
          localStorage.setItem('SKX_KananMEXCSinyal',0);

          $("#lKiriMEXCSinyal").text("");
          $("#lKananMEXCSinyal").text("");

          cekBalanceGATE();
          $("#calculateButton").prop('disabled', true);
          $("#resetmodal").hide();
          
          $('input[type="checkbox"]').prop('disabled', true);
          $('input[type="number"]').prop('disabled', true);
          $('input[type="text"]').prop('disabled', true);
          $("#startSCAN").hide();

          sendStatusTELE(user,'ONLINE');

        var startTime = new Date().getTime();
        localStorage.setItem('SKX_startTime',startTime);

        if (modalKiri && modalKanan && jedaTime && scAddressPair && desPair && symboPair && pnl) {
            
            //RUNNING SCAN 
            if ($('#KUCOIN').is(':checked')) { 
                $('#TabelKucoin').empty();
                cekTokenKUCOIN(modalKiri,modalKanan,jedaTime,scAddressPair,desPair);
            }

            if ($('#MEXC').is(':checked')) {     
                $('#TabelMEXC').empty();
                cekTokenMEXC(modalKiri,modalKanan,jedaTime,scAddressPair,desPair);
            }    

        } else {
            // Jika data tidak lengkap, tampilkan pesan peringatan atau lakukan tindakan lainnya
            alert("DATA SETINGAN SCANNER TIDAK LENGKAP");
        }
     }
     // menjalankan scanning
     $("#startSCAN").on("click", function() {
          setBeforeStart();        
     });
     
        // Mendapatkan nilai dari input modal
    $("#save-button").on("click", function() {
            var modalKiri = $("#modal-kiri").val();
            var modalKanan = $("#modal-kanan").val();
            var jedaTime = $("#jeda-time").val();
            var scAddressPair = $("#sc-addresspair").val();
            var desPair = $("#des-pair").val();
            var symboPair = $("#symbo-pair").val();
            var pnl = $("#pnl").val();
            var user = $("#user").val();

            // Validasi input (Anda dapat menyesuaikan sesuai kebutuhan)
            if (modalKiri && modalKanan && jedaTime && scAddressPair && desPair && symboPair && pnl && user) {
                // Menyimpan data ke local storage
                localStorage.setItem("SKX_modalKiri", modalKiri);
                localStorage.setItem("SKX_modalKanan", modalKanan);
                localStorage.setItem("SKX_jedaTime", jedaTime); 
                localStorage.setItem("SKX_pnl", pnl);

                localStorage.setItem("SKX_scAddressPair", scAddressPair);
                localStorage.setItem("SKX_desPair", desPair);
                localStorage.setItem("SKX_symboPair", symboPair);               
                localStorage.setItem("SKX_user", user);

                // Menutup modal setelah menyimpan data
                UIkit.modal("#my-modal").hide();
                toastr.success('SETTING BERHASIL!!');

                location.reload();

                updateForm();           
            } else {
                alert("Semua input harus diisi!");
            }
        });

        // Mendapatkan nilai dari input modal
        $("#saveModal").on("click", function() {
            var apiGate = $("#apiGate").val();
            var secretGate = $("#secretGate").val();
            var walletSOL = $("#walletSOL").val();
            var modalAwal = $("#modalAwal").val();
            var modalSol = $("#modalSol").val();

            // Validasi input (Anda dapat menyesuaikan sesuai kebutuhan)
            if (apiGate && secretGate && walletSOL && modalAwal && modalSol) {
                // Menyimpan data ke local storage
                localStorage.setItem("SKX_apiGate", apiGate);
                localStorage.setItem("SKX_secretGate", secretGate);
                localStorage.setItem("SKX_walletSOL", walletSOL);
                localStorage.setItem("SKX_modalAwal", modalAwal);
                localStorage.setItem("SKX_modalSol", modalSol);

                // Menutup modal setelah menyimpan data
                UIkit.modal("#my-modal2").hide();
                toastr.success('SETTING BERHASIL!!');

                location.reload();

                updateForm();           
            } else {
                alert("Semua input harus diisi!");
            }
        });

        function updateForm() {           
            $('#mkiri').val(localStorage.getItem("SKX_modalKiri"));
            $('#mkanan').val(localStorage.getItem("SKX_modalKanan"));
            $('#mjeda').val(localStorage.getItem("SKX_jedaTime"));
            $('#mpnl').val(localStorage.getItem("SKX_pnl"));
            $('#modalAwal').val(localStorage.getItem("SKX_modalAwal"));
            $('#modalSol').val(localStorage.getItem("SKX_modalSol"));


            $('#LmodalAwal').text(localStorage.getItem("SKX_modalAwal"));
            $('#LmodalSol').text(localStorage.getItem("SKX_modalSol"));

            $('#LpnlBefore').text(localStorage.getItem("SKX_LpnlBefore"));

            var usdtcex = parseFloat($("#LCEXUSDT").text()) || 0;
            var usdtdex = parseFloat($("#LDEXUSDT").text()) || 0;
            var modalAwalInput = parseFloat($("#LmodalAwal").text()) || 0;

            // Hitung total dan pnl
            var totalusdt = usdtcex + usdtdex;
            var pnl = totalusdt - modalAwalInput;

            // Tampilkan hasilnya di dalam elemen dengan ID totalusdt dan pnl
            $("#LtotalUSDT").text(totalusdt.toFixed(2));
            $("#Lpnl").text(pnl.toFixed(2));

            console.log("MODAL : "+modalAwalInput);
            console.log("USDT CEX : "+usdtcex);
            console.log("USDT CEX : "+usdtdex);
            console.log("TOTAL : "+totalusdt);
            console.log("PNL : "+pnl);

        }

    // Array of coins
    var coins_kucoin = [
  {
    "symbol": "ACS-USDT",
    "Desimal": 6,
    "Sc": "5MAYDfq5yxtudAhtfyuMBuHZjgAbaS9tbEyEQYAhDS5y",
    "wd": 215,
    "status": true
  },
  {
    "symbol": "ANALOS-USDT",
    "Desimal": 8,
    "Sc": "7iT1GRYYhEop2nV1dyCwK2MGyLmPHq47WhPGSwiqcUg5",
    "wd": 6000,
    "status": true
  },
  {
    "symbol": "ARNM-USDT",
    "Desimal": 6,
    "Sc": "3Dy8KFyvpUJ8nfRCbvk4HLWjNRRzxiVhTeE9PQF9RARD",
    "wd": 2500,
    "status": true
  },
  {
    "symbol": "AURY-USDT",
    "Desimal": 9,
    "Sc": "AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP",
    "wd": 0.6,
    "status": true
  },
  {
    "symbol": "BONK-USDT",
    "Desimal": 5,
    "Sc": "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",
    "wd": 100000,
    "status": true
  },
  {
    "symbol": "CWAR-USDT",
    "Desimal": 9,
    "Sc": "HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo",
    "wd": 40,
    "status": true
  },
  {
    "symbol": "FCON-USDT",
    "Desimal": 4,
    "Sc": "HovGjrBGTfna4dvg6exkMxXuexB3tUfEZKcut8AWowXj",
    "wd": 3000,
    "status": true
  },
  {
    "symbol": "FIDA-USDT",
    "Desimal": 6,
    "Sc": "EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp",
    "wd": 2.5,
    "status": true
  },
  {
    "symbol": "GARI-USDT",
    "Desimal": 9,
    "Sc": "CKaKtYvz6dKPyMvYq9Rh3UBrnNqYZAyd7iF4hJtjUvks",
    "wd": 20,
    "status": true
  },
  {
    "symbol": "GMT-USDT",
    "Desimal": 9,
    "Sc": "7i5KKsX2weiTkry7jA4ZwSuXGhs5eJBEjY8vVxR4pfRx",
    "wd": 2.4,
    "status": true
  },
  {
    "symbol": "GST-USDT",
    "Desimal": 9,
    "Sc": "AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB",
    "wd": 38,
    "status": true
  },
  {
    "symbol": "HAWK-USDT",
    "Desimal": 6,
    "Sc": "BKipkearSqAUdNKa1WDstvcMjoPsSKBuNyvKDQDDu9WE",
    "wd": 100,
    "status": true
  },
  {
    "symbol": "HBB-USDT",
    "Desimal": 6,
    "Sc": "HBB111SCo9jkCejsZfz8Ec8nH7T6THF8KEKSnvwT6XK6",
    "wd": 3,
    "status": true
  },
  {
    "symbol": "HNT-USDT",
    "Desimal": 8,
    "Sc": "hntyVP6YFm1Hg25TN9WGLqM12b8TQmcknKrdu1oxWux",
    "wd": 0.2,
    "status": true
  },
  {
    "symbol": "JTO-USDT",
    "Desimal": 9,
    "Sc": "jtojtomepa8beP8AuQc6eXt5FriJwfFMwQx2v2f9mCL",
    "wd": 0.3,
    "status": true
  },
  {
    "symbol": "JUP-USDT",
    "Desimal": 6,
    "Sc": "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",
    "wd": 1.5,
    "status": true
  },
  {
    "symbol": "LIKE-USDT",
    "Desimal": 9,
    "Sc": "3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR",
    "wd": 290,
    "status": true
  },
  {
    "symbol": "MNDE-USDT",
    "Desimal": 9,
    "Sc": "MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey",
    "wd": 2,
    "status": true
  },
  {
    "symbol": "MOBILE-USDT",
    "Desimal": 6,
    "Sc": "mb1eu7TzEc71KxDpsmsKoucSSuuoGLv1drys1oP2jh6",
    "wd": 150,
    "status": true
  },
  {
    "symbol": "MPLX-USDT",
    "Desimal": 6,
    "Sc": "METAewgxyPbgwsseH8T16a39CQ5VyVxZi9zXiDPY18m",
    "wd": 8,
    "status": true
  },
  {
    "symbol": "MXM-USDT",
    "Desimal": 6,
    "Sc": "H53UGEyBrB9easo9ego8yYk7o4Zq1G5cCtkxD3E3hZav",
    "wd": 10,
    "status": true
  },
  {
    "symbol": "MYRO-USDT",
    "Desimal": 9,
    "Sc": "HhJpBhRRn4g56VsyLuT8DL5Bv31HkXqsrahTTUCZeZg4",
    "wd": 6,
    "status": true
  },
  {
    "symbol": "NEON-USDT",
    "Desimal": 9,
    "Sc": "NeonTjSjsuo3rexg9o6vHuMXw62f9V7zvmu8M8Zut44",
    "wd": 0.6,
    "status": true
  },
  {
    "symbol": "ORCA-USDT",
    "Desimal": 6,
    "Sc": "orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE",
    "wd": 0.2,
    "status": true
  },
  {
    "symbol": "OTK-USDT",
    "Desimal": 9,
    "Sc": "octo82drBEdm8CSDaEKBymVn86TBtgmPnDdmE64PTqJ",
    "wd": 20,
    "status": true
  },
  {
    "symbol": "PIP-USDT",
    "Desimal": 9,
    "Sc": "HHjoYwUp5aU6pnrvN4s2pwEErwXNZKhxKGYjRJMoBjLw",
    "wd": 5,
    "status": true
  },
  {
    "symbol": "PLD-USDT",
    "Desimal": 6,
    "Sc": "2cJgFtnqjaoiu9fKVX3fny4Z4pRzuaqfJ3PBTMk2D9ur",
    "wd": 40,
    "status": true
  },
  {
    "symbol": "PYTH-USDT",
    "Desimal": 6,
    "Sc": "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3",
    "wd": 2,
    "status": true
  },
  {
    "symbol": "RACEFI-USDT",
    "Desimal": 6,
    "Sc": "AAmGoPDFLG6bE82BgZWjVi8k95tj9Tf3vUN7WvtUm2BU",
    "wd": 11,
    "status": true
  },
  {
    "symbol": "RAY-USDT",
    "Desimal": 6,
    "Sc": "4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R",
    "wd": 1,
    "status": true
  },
  {
    "symbol": "SAROS-USDT",
    "Desimal": 6,
    "Sc": "SarosY6Vscao718M4A778z4CGtvcwcGef5M9MEH1LGL",
    "wd": 90,
    "status": true
  },
  {
    "symbol": "SHILL-USDT",
    "Desimal": 6,
    "Sc": "6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd",
    "wd": 60,
    "status": true
  },
  {
    "symbol": "SILLY-USDT",
    "Desimal": 9,
    "Sc": "7EYnhQoR9YM3N7UoaKRoA44Uy8JeaZV3qyouov87awMs",
    "wd": 15,
    "status": true
  },
  {
    "symbol": "SLCL-USDT",
    "Desimal": 9,
    "Sc": "SLCLww7nc1PD2gQPQdGayHviVVcpMthnqUz2iWKhNQV",
    "wd": 20,
    "status": true
  },
  {
    "symbol": "SLIM-USDT",
    "Desimal": 6,
    "Sc": "xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW",
    "wd": 5,
    "status": true
  },
  {
    "symbol": "SOLR-USDT",
    "Desimal": 6,
    "Sc": "7j7H7sgsnNDeCngAPjpaCN4aaaru4HS7NAFYSEUyzJ3k",
    "wd": 40,
    "status": true
  },
  {
    "symbol": "SOLS-USDT",
    "Desimal": 9,
    "Sc": "2wme8EVkw8qsfSk2B3QeX4S64ac6wxHPXb3GrdckEkio",
    "wd": 0.6,
    "status": true
  },
  {
    "symbol": "SRM-USDT",
    "Desimal": 6,
    "Sc": "SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt",
    "wd": 35,
    "status": true
  },
  {
    "symbol": "WEN-USDT",
    "Desimal": 5,
    "Sc": "WENWENvqqNya429ubCdR81ZmD69brwQaaBYY6p3LCpk",
    "wd": 10000,
    "status": true
  },
  {
    "symbol": "WIF-USDT",
    "Desimal": 6,
    "Sc": "EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm",
    "wd": 3,
    "status": true
  },
  {
    "symbol": "WLKN-USDT",
    "Desimal": 9,
    "Sc": "EcQCUYv57C4V6RoPxkVUiDwtX1SP8y8FP5AEToYL8Az",
    "wd": 150,
    "status": true
  },
  {
    "symbol": "XTAG-USDT",
    "Desimal": 6,
    "Sc": "5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp",
    "wd": 30,
    "status": true
  },
  {
    "symbol": "ZBC-USDT",
    "Desimal": 9,
    "Sc": "zebeczgi5fSEtbpfQKVZKCJ3WgYXxjkMUkNNx7fLKAF",
    "wd": 60,
    "status": true
  }
]

        function ubahSimbol(simbol) {
                if (simbol.endsWith("USDT")) {
                    var pasanganPerdagangan = simbol.replace("USDT", "");
                    return pasanganPerdagangan;
                }
                return simbol;
        }
    
        function SymbolHapusPair(simbol) {
                if (simbol.endsWith("USDT")) {
                    var pasanganPerdagangan = simbol.replace("-USDT", "");
                    return pasanganPerdagangan;
                }
                return simbol;
        }

        function SymbolGarisPair(simbol) {
                if (simbol.endsWith("USDT")) {
                    var pasanganPerdagangan = simbol.replace("USDT", "-USDT");
                    return pasanganPerdagangan;
                }
                return simbol;
        }

        function SymbolHapusPair2(simbol) {
                if (simbol.endsWith("USDT")) {
                    var pasanganPerdagangan = simbol.replace("-USDT", "");
                    return pasanganPerdagangan;
                }
                return simbol;
        }

        // fungsi cek price pair
        function cekPricePAIRDEX(){
          var pair = localStorage.getItem("SKX_symboPair");
          var sc = localStorage.getItem("SKX_scAddressPair");
          var des = localStorage.getItem("SKX_desPair");     
          $("label#LRate").text(pair);

                if(pair=="USDT"){
                    localStorage.setItem('SKX_PriceRate', 1);
                    $("label#LPriceRate").text(" 1$");
                }else if(pair=="DAI"){
                    localStorage.setItem('SKX_PriceRate', 1);
                    $("label#LPriceRate").text(" 1$");
                }else if(pair=="USDC"){
                    localStorage.setItem('SKX_PriceRate', 1);
                    $("label#LPriceRate").text(" 1$");
                }else{
                    $.ajax({
                    url: 'https://api.gateio.ws/api/v4/spot/order_book?limit=1',
                    data: {
                        currency_pair: pair+"_USDT"
                    },
                    success : function(response) {
                        var PriceRate = parseFloat(response.asks[0]).toFixed(7);
                       // localStorage.setItem('SKX_RatePair',pair+"-USDT");
                        localStorage.setItem('SKX_PriceRate', PriceRate);
                       // console.log('Latest Rate Price:', PriceRate);
                        
                        $("label#LPriceRate").text("! " + PriceRate + "$");
                       // console.log('Get Price Rate Pair:',PriceRate);
                    },

                    error: function(xhr, status, error) {
                    console.log('Error get Price Rate Pair:', error);
                    }
                });
            }
        }

    function cekHargaJupiter(sc_input, des_input, sc_output, des_output, amount, price, posisi, symbol, market) {
        var modal_kiri = parseFloat(localStorage.getItem("SKX_modalKiri"));
        var modal_kanan = parseFloat(localStorage.getItem("SKX_modalKanan"));
        var KiriMarketSinyal = parseInt(localStorage.getItem('SKX_Kiri' + market + 'Sinyal'));
        var KananMarketSinyal = parseInt(localStorage.getItem('SKX_Kanan' + market + 'Sinyal'));

        var opit = localStorage.getItem("SKX_pnl");
        var user = localStorage.getItem("SKX_user");
        
        var amount_in =parseInt(Math.pow(10, des_input) * amount);

        var apiUrl = randomServerUrl + "https://quote-api.jup.ag/v6/quote";
        //var apiUrl = "https://quote-api.jup.ag/v6/quote";
        
        var url = apiUrl + "?inputMint=" + sc_input + "&outputMint=" + sc_output + "&amount=" + amount_in;

       // setTimeout(function () {
            $.ajax({
            url: url,
            method: "GET",
            success: function(response) {                 
               var PriceRate = localStorage.getItem('SKX_PriceRate');
               var amount_out = parseFloat(response.outAmount)/Math.pow(10, des_output);

                if(posisi=="sell"){
                    var amount_out = parseFloat(amount_out*PriceRate);
                    var PNL=parseFloat(amount_out-modal_kiri).toFixed(2) ;
                    var priceDEX=(amount_out/(modal_kiri/price)).toFixed(11); 
                    var selisihPersen = ((priceDEX - price) / price) * 100;
                    var eFEE = (modal_kiri*0.0015)+0.65;

                    console.log("--- " + market + "-KIRI: "+ symbol +" ---  ");
                    console.log(" MODAL : " + localStorage.getItem("SKX_modalKiri"));
                    console.log(" FILTER PNL : " + opit);
                    console.log(" BUY CEX : " + price);
                    console.log(" SELL DEX : " + priceDEX);
                    console.log(" PNL : " + PNL);
                    console.log(" Estimasi FEE : " + eFEE);
                    console.log(" PERSEN : " + selisihPersen);

                    if(PNL>opit){
                        var message = 
                            "#SBOT_<b>" + localStorage.getItem('SKX_user') + " : " + market + "</b>" +
                            " \n -----------------------------------------" +
                            " \n KIRI : <b>#" + SymbolHapusPair(symbol) + "</b> <a href='https://solscan.io/token/" + sc_input + "'>[ SC ]</a>" +
                            "  <a href='https://solscan.io/account/u6PJ8DtQuPFnfmwHbGFULQ4u4EgjDiyYKjVEsynXq2w' target='_blank'>[ STOK ]</a>" +
                            " \n MODAL : <b>" + localStorage.getItem("SKX_modalKiri") + "</b> | PNL : <b>" + PNL + "$ </b> " +
                           // " \n <b>BUY : </b><a href='https://www.gate.io/trade/" + symbol + "?from=markets%26theme=light%26type=spot' target='_blank'>" + price + "</a>" +
                          //  " \n <b>SELL : </b> <a href='https://jup.ag/swap/" + sc_input + "-" + sc_output + "' target='_blank'>" + priceDEX + "</a>" +
                            " \n ESTIMASI FEE : <b>" + eFEE.toFixed(2) + "$</b>"+
                            " \n --------------------------------------------------"; 
                        //MultisendMessage(message);

                        var jKiriMarketSinyal = KiriMarketSinyal + 1;
                        localStorage.setItem("SKX_Kiri" + market + "Sinyal", jKiriMarketSinyal);
                        $("#lKiri" + market + "Sinyal").text(localStorage.getItem('SKX_Kiri' + market + 'Sinyal'));
                    }

                }

                if(posisi=="buy"){
                    var priceDEX=parseFloat((modal_kanan/PriceRate)/(amount_out/PriceRate)).toFixed(11); 
                    var PNL =parseFloat(((modal_kanan/priceDEX)*price)-modal_kanan).toFixed(2);
                    var selisihPersen = ((price - priceDEX) / priceDEX) * 100;
                    var eFEE = (modal_kiri*0.0015)+0.15;

                    console.log("--- " + market + "-KANAN : "+ symbol +" ---  ");
                    console.log(" MODAL : " + localStorage.getItem("SKX_modalKanan"));
                    console.log(" FILTER PNL : " + opit);
                    console.log(" BUY DEX : " + priceDEX);
                    console.log(" SELL CEX : " + price);
                    console.log(" PNL : " + PNL);
                    console.log(" Estimasi FEE : " + eFEE);
                    console.log(" PERSEN : " + selisihPersen);

                    if(PNL>opit){
                      var message = 
                          "<b>#SBOT_" + localStorage.getItem('SKX_user') + " : " + market + "</b>" +
                          " \n --------------------------------------------------" +
                          " \n KANAN : <b>#" + SymbolHapusPair(symbol) + "</b> <a href='https://solscan.io/token/" + sc_input + "'> [ SC ] </a>" +
                          "  <a href='https://solscan.io/account/u6PJ8DtQuPFnfmwHbGFULQ4u4EgjDiyYKjVEsynXq2w' target='_blank'>[ STOK ]</a>" +
                          " \n MODAL : <b> " + localStorage.getItem("SKX_modalKanan") + "</b> | PNL : <b>" + PNL + "$ </b> " +
                         // " \n <b>BUY : </b> <a href='https://jup.ag/swap/" + sc_input + "-" + sc_output + "' target='_blank'>" + priceDEX + "</a>" +
                         // " \n <b>SELL : </b> <a href='https://www.gate.io/trade/" + symbol + "?from=markets%26theme=light%26type=spot' target='_blank'>" + price + "</a>" +
                          " \n ESTIMASI FEE : <b>" + eFEE.toFixed(2) + "$</b>"+
                          " \n --------------------------------------------------";
                      //MultisendMessage(message);

                        var jKananMarketSinyal = KananMarketSinyal + 1;
                        localStorage.setItem("SKX_Kanan" + market + "Sinyal", jKananMarketSinyal);
                        $("#lKanan" + market + "Sinyal").text(localStorage.getItem('SKX_Kanan' + market + 'Sinyal'));
                    }                    
                }
                
               //var pnlNetto = PNL;

                if(PNL>opit){
                    var warna="ijo";
                    var PNL="<span class='uk-label uk-label-success'>"+PNL+"</span>";
                }else if(PNL>eFEE){
                    var warna="orange";
                    var PNL="<span class='uk-label uk-label-secondary'>"+PNL+"</span>";  
                }else{
                    var warna="merah";
                    var PNL="<span class='uk-label uk-label-danger'>"+PNL+"</span>";                    
                }
                
                var currentRow = $("#dex_"+posisi+"_"+symbol).html("<a href=https://www.guacamole.gg/trade/swap?inputMint="+sc_input+"&outputMint="+sc_output+" target=_blank>#</a>  <a href=https://jup.ag/swap/"+sc_input+"-"+sc_output+" target=_blank>"+priceDEX+"</a><br/>("+PNL+"$:"+selisihPersen.toFixed(2)+"%)").addClass(warna);
                currentRow.append();
             
            },
            error: function (xhr, status, error) {
                    if (xhr.status === 429) {
                        var errorMessage = "Error: " + xhr.status + " - " + error + "\n" +
                            "Message: " + xhr.responseJSON.message;
                            var alert="KENA LIMIT";
                        console.log(errorMessage);
                    } else {
                        var alert=xhr.status;
//                        var alert="LIMITED";
                        console.log("Error: " + xhr.status + " - " + error);
                    }

                    var currentRow= $("#dex_"+posisi+"_"+symbol).html("ERROR : "+alert).addClass("error");
                    currentRow.append();
                }
            });
         // }, a*jedaTime);
    }


    function getPriceKucoin(coins,index,posisi,modal, callback) {
      updateProgress(index, coins.symbol,localStorage.getItem('SKX_TotalCoins'),'GATE');
      console.warn(coins.symbol);
            $.ajax({
                url: 'https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=' +coins.symbol+'',
                method: 'GET',
                success: function(reskucoin) { 
                   
                     var data = reskucoin.data;
                     var dataOUT = {};
                      dataOUT.price_buy = data.asks[0][0];
                      dataOUT.price_buy1 = data.asks[1][0];
                      dataOUT.price_buy2 = data.asks[2][0];
                      dataOUT.vol_buy = (parseFloat(data.asks[0][1]) * dataOUT.price_buy).toFixed(2);
                      dataOUT.vol_buy1 = (parseFloat(data.asks[1][1]) * dataOUT.price_buy1).toFixed(2);
                      dataOUT.vol_buy2 = (parseFloat(data.asks[2][1]) * dataOUT.price_buy2).toFixed(2);
                      dataOUT.price_sell = data.bids[0][0];
                      dataOUT.price_sell1 = data.bids[1][0];
                      dataOUT.price_sell2 = data.bids[2][0];
                      dataOUT.vol_sell = (parseFloat(data.bids[0][1]) * dataOUT.price_sell).toFixed(2);
                      dataOUT.vol_sell1 = (parseFloat(data.bids[1][1]) * dataOUT.price_sell1).toFixed(2);
                      dataOUT.vol_sell2 = (parseFloat(data.bids[2][1]) * dataOUT.price_sell2).toFixed(2);
                      dataOUT.feeWD = parseFloat(coins.wd*dataOUT.price_buy).toFixed(2);
                      dataOUT.symbol = SymbolHapusPair(coins.symbol);

                      if (posisi === "buy") {
                          var a= "<a href=https://www.kucoin.com/trade/" + coins.symbol + " target=_blank> ~ " + dataOUT.price_buy + " : <b>" + dataOUT.vol_buy + "$</b> </a> <a href=https://www.kucoin.com/assets/withdraw/" + dataOUT.symbol + " target=_blank> <br/>[ Fee : " + parseFloat((0.0012 * modal)+(coins.wd*data.asks[0][0])).toFixed(2) + "$ - WD] </a>";
                          $("#cex_buy_" + coins.symbol).html(a).append();  
                          $("#vol_buy_" + coins.symbol).html("~" + dataOUT.price_buy1 + " : <b>" + dataOUT.vol_buy1 + "$</b><br/>~" + dataOUT.price_buy2 + " : <b>" + dataOUT.vol_buy2 + "$</b>").append();                          
                      }
                      if (posisi === "sell") {
                          var b="<a href=https://www.kucoin.com/trade/" + coins.symbol + " target=_blank> ~ " + dataOUT.price_sell + ": <b>" + dataOUT.vol_sell + "$</b> </a> <a href=https://www.kucoin.com/assets/deposit/" + dataOUT.symbol + " target=_blank>  <br/>[ Fee : " + parseFloat((0.0015 * modal)+0.05).toFixed(2) + "$ - DP] </a>";
                          $("#cex_sell_" + coins.symbol).html(b).append();  
                          $("#vol_sell_" + coins.symbol).html("~" + dataOUT.price_sell1 + " : <b>" + dataOUT.vol_sell1 + "$</b><br/>~" + dataOUT.price_sell2 + " : <b>" + dataOUT.vol_sell2 + "$</b>").append();                          
                      }
                        callback(null, dataOUT);
                    
                },
                error: function(error) {
                    callback('Error calling API pertama: ' + error);                   
                }
            });
        }

    function cekTokenKUCOIN(modal_kiri, modal_kanan, jeda , sc_pair, des_pair) {
      var coins_kucoin_length = coins_kucoin.length;
      localStorage.setItem("SKX_TotalCoins",coins_kucoin_length);

      coins_kucoin.forEach(function (coins,index) {

               // var apiUrl = randomServerUrl+"https://api.gateio.ws/api/v4/spot/order_book?limit=5&currency_pair=" + coins.symbol;
               // setTimeout(function () {
                   var jcounter = index+1;
                  // localStorage.setItem("SKX_counter",jcounter);                    
                       
                        var jeda1=jeda*index*0.8;
                        var jeda2=jeda*index*0.9;
                        var symbol = SymbolHapusPair(coins.symbol);                        
                       
                        setTimeout(function () {
                          getPriceKucoin(coins,jcounter,"buy",modal_kiri, function(error, result) { 
                            var amount_in = modal_kiri / result.price_buy;
                              cekHargaJupiter(coins.sc, coins.desimal,sc_pair, des_pair, amount_in, result.price_buy, "sell", coins.symbol, "GATE",function(error, response) {
                              });
                          });
                        }, jeda1);
                      
                        setTimeout(function () {
                          getPriceKucoin(coins,jcounter,"sell",modal_kanan, function(error, result) {
                            cekPricePAIRDEX();
                            var modal_in = modal_kanan / parseFloat(localStorage.getItem('SKX_PriceRate'));
                                cekHargaJupiter(sc_pair, des_pair, coins.sc, coins.desimal, modal_in, result.price_sell, "buy", coins.symbol, "GATE",function(error, response) {                          
                              });
                          });
                       }, jeda2);

                       // Append data to the table
                        $("#TabelKucoin").append(
                            "<tr>" +
                            "<td>" + jcounter + "</td>" +
                            "<td id=vol_buy_" + coins.symbol + "></td>" +
                            "<td id=cex_buy_" + coins.symbol + "></td>" + 
                            "<td id=dex_sell_" + coins.symbol + "></td>" +
                            "<td> <a href=https://solscan.io/token/" + coins.sc + " target=_blank>" + symbol + "</a> <a href=https://solscan.io/account/u6PJ8DtQuPFnfmwHbGFULQ4u4EgjDiyYKjVEsynXq2w target=_blank> [STOK] </a><br/> <span id=wallet_"+symbol+"></td>" +
                            "<td id=dex_buy_" + coins.symbol + "></td>" +
                            "<td id=cex_sell_" + coins.symbol + "></td>" +
                            "<td id=vol_sell_" + coins.symbol + "></td>" +
                            "</tr>"
                        );
                    console.warn("JEDA",index*jeda);
                 //}, index*jeda);
//            }
        });

    }
 

    $("#refresh").click(function () {
          cekBalanceGATE();
          location.reload();
          toastr.success('REFRESH DONE!!');
          //alert("REFRESH AKAN DILAKUKAN...!!");
    });

    function calculatePnl() {
            //LpnlBefore
          //  $('#LpnlBefore').text(localStorage.getItem("SKX_LpnlBefore"));

           // cekBalanceGATE()
            // Ambil nilai modal awal dari input
            var modalAwalInput = parseFloat($("#modalAwal").val()) || 0;

            // Konversi teks menjadi angka
            var usdtcex = parseFloat($("#LCEXUSDT").text()) || 0;
            var usdtdex = parseFloat($("#LDEXUSDT").text()) || 0;

            // Hitung total dan pnl
            var totalusdt = usdtcex + usdtdex;
            var pnl = totalusdt - modalAwalInput;

            // Tampilkan hasilnya di dalam elemen dengan ID totalusdt dan pnl
            $("#LtotalUSDT").text(totalusdt.toFixed(2));
            $("#Lpnl").text(pnl.toFixed(2));

           // location.reload();
           // toastr.success('CEK SALDO...DONE!!');
            localStorage.setItem("SKX_LpnlBefore", pnl.toFixed(2));
           // $("#resetmodal").show();
   }

   function cekBalanceChainSOL(tokenCek,address){             
              var apiUrl = "https://api.solana.fm/v1/addresses/"+address+"/tokens";  
              console.log(apiUrl);
              // Make API call
              $.get(apiUrl, function (data) {
                  var amount = data.tokens[tokenCek].balance;
                  var name = data.tokens[tokenCek].tokenData.tokenList.symbol;
                  $("#LDEXUSDT").text(parseFloat(amount.toFixed(2)));

                  calculatePnl();
                  
                  $("#calculateButton").show();
                //  toastr.success('CEK SALDO...DONE!!');
              }).fail(function () {
                // Handle API call failure
                toastr.error('GAGAL CEK SALDO - WALLET DEX!!');
                console.error("Failed to fetch data from API.");
                // You can show an error message to the user or perform any other action.
            });;
     }

     function cekBalanceGATE(){
        var key = localStorage.getItem('SKX_apiGate');
        var secret = localStorage.getItem('SKX_secretGate');
        if (!key || !secret) {
            toastr.error('GAGAL CEK SALDO - CEK API GATE!!');
//            console.error("API key or secret not found. Please set them in your settings.");
            // You can show an error message to the user or redirect to a settings page.
            return;
        }
        var host = "https://cors.gemul-putra.workers.dev/?https://api.gateio.ws";
        var prefix = "/api/v4";
        var method = "GET";
      //  var url = "/wallet/total_balance";
        var url = "/spot/accounts";
        
        var query_param = "";
        var body_param = '';
        var timestamp = Math.floor(new Date().getTime() / 1000);
        var body_hash = CryptoJS.SHA512(body_param).toString();
        var sign_string = method + '\n' + prefix + url + '\n' + query_param + '\n' + body_hash + '\n' + timestamp;
        var sign = CryptoJS.HmacSHA512(sign_string, secret).toString();
        var full_url = host + prefix + url;

        // Make AJAX request
        $.ajax({
            url: full_url,
            method: method,
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Timestamp': timestamp,
                'KEY': key,
                'SIGN': sign
            },
            success: function (response) {
                // Handle the response and update the table
                cekBalanceChainSOL("Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",walletSOL);   
               // $('#LCEXUSDT').text(parseFloat(response.details.spot.amount).toFixed(2));

               var usdtInfo = response.find(function(currency) {
                    return currency.currency === "USDT";
                });

                $('#LCEXUSDT').text(parseFloat(usdtInfo.available).toFixed(2));
            },
            error: function (error) {
                console.error(error);
                toastr.error('GAGAL CEK SALDO - API GATE!!');
                // Handle errors here
            }
        });
     }
     
     function MultisendMessage(message) {
                var users = [
                    { chat_id: -1002103736583 }                
                   // { chat_id: SKX_savedData.ID_GRUP}
                ];

                var token = "6554422567:AAHn2KErUWyl_RIDChwv49mfHf9lHf_OTgQ";
                var apiUrl = 'https://api.telegram.org/bot' + token + '/sendMessage';

                // Loop melalui daftar pengguna
                for (var i = 0; i < users.length; i++) {
                var user = users[i];
                var chatId = user.chat_id; // Ganti dengan ID chat pengguna

                // Membuat permintaan POST menggunakan jQuery
                $.ajax({
                    url: apiUrl,
                    method: "POST",
                    data: {
                        chat_id: chatId,
                        text: message,
                        parse_mode: "HTML",
                        disable_web_page_preview: true
                    },
                    success: function(response) {
                        console.log("Message sent successfully");
                    },
                    error: function(xhr, status, error) {
                        console.log("Error sending message:", error);
                    }
                    });
                }
            }

            function sendStatusTELE(user,status){
         //  sendTELEResult("STOP",localStorage.getItem('sx'),localStorage.getItem('skiri'),localStorage.getItem('skanan'));
              var users = [
              { chat_id: -1002103736583},
              // { chat_id: -4074010610 }
              ];
               
            var message = 
             "   #"+user.toUpperCase()+" is <b>[ "+status+" ]</b>";
            //  +
            //  " \n KIRI : <b> " + localStorage.getItem("SKX_modalKiri") + "$ </b> | KANAN : <b>" +  localStorage.getItem("SKX_modalKanan") +  "$ </b> "+
            //  " \n ---------------------------------------------" ;

            var token = "6554422567:AAHn2KErUWyl_RIDChwv49mfHf9lHf_OTgQ";        
            var apiUrl = 'https://api.telegram.org/bot' + token + '/sendMessage';

            // Loop melalui daftar pengguna
            for (var i = 0; i < users.length; i++) {
              var user = users[i];
              var chatId = user.chat_id; // Ganti dengan ID chat pengguna

              // Membuat permintaan POST menggunakan jQuery
              $.ajax({
                  url: apiUrl,
                  method: "POST",
                  data: {
                    chat_id: chatId,
                    text: message,
                    parse_mode: "HTML",
                    disable_web_page_preview: true
                  },
                  success: function(response) {
                    console.log("Message sent successfully");
                  },
                  error: function(xhr, status, error) {
                    console.log("Error sending message:", error);
                  }
                });
            }
        }
        //FUNGSI AUTORUN
        var autorun = false;
        $('input#Cautorun').change(function() {
            if ($(this).is(':checked')) {
                autorun=true;
            } else {
                autorun=false;
            }
        });

        function updateProgress(totalscanned,token,countTrueStatus,market){            
          //  var countTrueStatus = localStorage.getItem("SKX_TotalCoins");

            var mulai = parseInt(localStorage.getItem('SKX_startTime'));
            var endTime = new Date().getTime(); // Waktu akhir setelah panggilan REST API berhasil

            var duration = (endTime - mulai)/1000; // Durasi panggilan API dalam milidetik
            localStorage.setItem("SKX_duration",duration);


            var perulangan = totalscanned / countTrueStatus;
            $('#scanprogress').html('CHECK '+market+' - '+token+' [ '+ totalscanned + ' / ' + countTrueStatus + ' coin] :: DURASI ['+parseFloat(duration/60).toFixed(2)+' Menit]').css("color", "blue");
            $('#bar').css('width', (totalscanned / countTrueStatus * 100) + '%');

            if(totalscanned >= countTrueStatus ){
              if(autorun == true){
                    $('#scanprogress').html('Akan Mengulangi scanning dalam 17 detik.');
                    
                    setTimeout(function(){ 
                       // $('tbody tr').remove();                        
                         setBeforeStart();                        
                         sendStatusTELE(user,'ONLINE');
                    }, 17000);
                }else{
                    $('#scanprogress').html('SCANNING SELESAI!! DURASI ['+parseFloat(duration/60).toFixed(2)+' Menit]');
                    $("#startSCAN").show();
                    $("#calculateButton").prop('disabled', false);
                }
                
               
            }

            
        }
});

</script>

</body>
</html>
